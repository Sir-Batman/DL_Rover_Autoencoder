import numpy as np
import matplotlib.pyplot as plt
import os

# data generated by mlp.py







def getData(path):

    original_run = np.loadtxt(open(path, "rb"), delimiter=",")

    epochs = original_run[:,0]
    train_loss = original_run[:,1]
    test_loss = original_run[:,2]

    return epochs, train_loss, test_loss



def main():

    max_epoch = 51
    model_str = "model7"

    directory = os.path.join("models", model_str)

    csv_files = [("train.csv", "Autoencoder Training")]
    
    for filename, description in csv_files:

        fname, ext = os.path.splitext(filename)

        path = os.path.join(directory, filename)

        (epochs, train_loss, test_loss) = getData(path)


        train_plot = plt.plot(epochs[0:max_epoch], train_loss[0:max_epoch], 'bo-', label="Train")
        test_plot = plt.plot(epochs[0:max_epoch], test_loss[0:max_epoch], 'rx-', label="Test")
        plt.xlabel("Epoch")
        plt.ylabel("Loss")

        plt.legend(handles=[train_plot[0], test_plot[0]], loc='upper right')
        # plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)

        plt.title(description + ": Loss vs Epoch")
        plt.savefig(os.path.join("models", model_str, "plots", fname+"_loss_ur_v.png"))
        plt.show()
        plt.clf()

    # plt.errorbar(num_hidden, avg_hidden_test_acc, yerr=avg_hidden_test_std, fmt='bo-')
    # plt.xlabel("Number Hidden Units")
    # plt.ylabel("Test Accuracy")
    # plt.xlim([0, 210])
    # plt.title("Test Accuracy vs Number Hidden Units")
    # plt.show()

    # plt.errorbar(num_lr, avg_lr_test_acc, yerr=avg_lr_test_std, fmt='bo-')
    # plt.xlabel("Learning Rate")
    # plt.ylabel("Test Accuracy")
    # plt.xlim([0, 0.21])
    # plt.title("Test Accuracy vs Learning Rate")
    # plt.show()

    # plt.plot(batch_acc[0], batch_acc[1], 'b-')
    # plt.xlabel("Batch Size")
    # plt.ylabel("Train accuracy")
    # plt.show()

if __name__ == '__main__':
    main()